d <- as.date("1986-08-22")
d <- as.Date("1986-08-22")
d
weekday(d)
weekdays(d)
quarters(d)
class(d)
unclass(d)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
setwd("~/coursera/rprogramming")
setwd(specdata)
setwd("specdata")
getwd()
id <- 1:30
monitors <- read.csv(id + ".csv")
monitors <- read.csv(id)
monitors <- read.csv(paste(id,".csv"))
monitors <- read.table(paste(id,".csv"))
id
monitors <- read.delim(paste(id,".csv"))
monitors <- read.csv("1.csv")
monitors <- read.csv("001.csv")
monitors
monitors <- list(read.csv(paste(id,".csv")))
def <- paste(id,".csv")
def
def <- paste(id,".csv", sep = "")
def
def <- paste(sprintf("%03d",id),".csv", sep = "")
def
monitors <- read.csv(def)
monitors <- read.csv(file=def)
def
def[1]
monitors <- list.files(pattern=def)
monitors
monitors <- lapply(def,read.csv)
monitors
monitors["sulfate"]
monitors[1]
monitors[]["sulfate"]
monitors[0
]
monitors[3]
monitors["sulfate"]
monitors[["sulfate"]
]
merged <- Reduce(function(x, y) merge(x, y, all=TRUE), monitors)
merged
merged["sulfate"]
pollutantmean <- function(directory, pollutant, id = 1:332) {
setwd(directory)
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(filenames,read.csv)
mergedFrame <- Reduce(function(x, y) merge(x, y, all=TRUE), monitors)
pollutantValues <- mergedFrame[pollutant]
nans <- is.na(pollutantValues)
res <- mean(pollutantValues[!nans])
}
val <- pollutantmean("","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
if(length(directory!=0) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(filenames,read.csv)
mergedFrame <- Reduce(function(x, y) merge(x, y, all=TRUE), monitors)
pollutantValues <- mergedFrame[pollutant]
nans <- is.na(pollutantValues)
res <- mean(pollutantValues[!nans])
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
if(length(directory!=0) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(filenames,read.csv)
mergedFrame <- Reduce(function(x, y) merge(x, y, all=TRUE), monitors)
pollutantmean <- function(directory, pollutant, id = 1:332) {
if(length(directory!=0) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(filenames,read.csv)
mergedFrame <- Reduce(function(x, y) merge(x, y, all=TRUE), monitors)
getwd
getwd()
setwd("..")
getwd()
source("pollutantmean.R")
pollutantmean <- function(directory, pollutant, id = 1:332) {
if(length(directory!=0)) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(filenames,read.csv)
mergedFrame <- Reduce(function(x, y) merge(x, y, all=TRUE), monitors)
pollutantValues <- mergedFrame[pollutant]
nans <- is.na(pollutantValues)
res <- mean(pollutantValues[!nans])
}
val <- pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
if(length(directory!=0)) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(fileNames,read.csv)
mergedFrame <- Reduce(function(x, y) merge(x, y, all=TRUE), monitors)
pollutantValues <- mergedFrame[pollutant]
nans <- is.na(pollutantValues)
res <- mean(pollutantValues[!nans])
}
val <- pollutantmean("specdata","sulfate",1:10)
setwd(specdata)
setwd("specdata")
getwd
getwd()
val <- pollutantmean(".","sulfate",1:10)
val
val <- pollutantmean(".", "nitrate", 70:72)
val
val <- pollutantmean(".", "nitrate", 23)
val
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
install.packages("swirl")
submit()
getwd()
setwd("..")
submit()
completeCases <- data.frame()
completeCases <- data.frame(id=NULL,nobs=NULL)
completeCases
cols <- c("id","nobs")
colnames(dataframe) <- cols
complete <- function(directory, id = 1:332) {
if(length(directory!=0)) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(fileNames,read.csv)
completeCases <- data.frame(id=monitors["id"],length(complete.cases(monitors)))
}
complete("specdata", 1:10)
complete(".", 1:10)
monitors
monitors[1]
head(monitors[1])
head(monitors[1],10)
names(monitors)
colnames(monitors)
monitors["id"]
monitors[1]["id"]
monitors
monitors[1]["ID"]
monitors["ID"]
factors(monitors)
levels(monitors)
class(monitors)
class(monitors[1])
class(monitors[[1]])
monitors[[1]]["ID"]
complete <- function(directory, id = 1:332) {
if(length(directory!=0)) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(fileNames,read.csv)
completeCases <- data.frame(id=monitors[[]]["ID"],length(complete.cases(monitors[[]])))
}
complete(".", 1:10)
complete <- function(directory, id = 1:332) {
if(length(directory!=0)) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(fileNames,read.csv)
completeCases <- data.frame(id=numeric(length(id)),nobs=length(id))
for(file in monitors) {
completeCases$id = file[["ID"]][[1]]
completeCases$nobs = complete.cases(file)
}
completeCases
}
complete(".", 1:10)
complete <- function(directory, id = 1:332) {
if(length(directory!=0)) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(fileNames,read.csv)
completeCases <- data.frame(id=numeric(length(id)),nobs=length(id))
for(file in monitors) {
completeCases$id = file[["ID"]][[1]]
completeCases$nobs = length(complete.cases(file))
}
completeCases
}
complete(".", 1:10)
complete <- function(directory, id = 1:332) {
if(length(directory!=0)) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(fileNames,read.csv)
completeCases <- data.frame(id=numeric(length(id)),nobs=length(id))
index <- 1
for(file in monitors) {
completeCases$id[index] <- file[["ID"]][[1]]
completeCases$nobs[index] <- complete.cases(file)
index <- index + 1
}
completeCases
}
complete(".", 1:10)
complete <- function(directory, id = 1:332) {
if(length(directory!=0)) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(fileNames,read.csv)
completeCases <- data.frame(id=numeric(length(id)),nobs=length(id))
index <- 1
for(file in monitors) {
completeCases$id[index] <- file[["ID"]][[1]]
completeCases$nobs[index] <- length(complete.cases(file))
index <- index + 1
}
completeCases
}
complete(".", 1:10)
complete(".", 1)
complete(".", c(2, 4, 8, 10, 12))
monitors[1]
class(monitors[[1]][3])
class(monitors[[1]][[3]])
class(monitors[[1]])
class(monitors[[1]][["ID"]])
}
setwd("..")
source("complete.R")
setwd(directory)
debugSource('~/coursera/rprogramming/complete.R')
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(fileNames,read.csv)
complete <- function(directory, id = 1:332) {
if(length(directory!=0)) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(fileNames,read.csv)
completeCases <- data.frame(id=numeric(length(id)),nobs=length(id))
index <- 1
for(file in monitors) {
completeCases$id[index] <- file[["ID"]][[1]]
completeCases$nobs[index] <- length(na.omit(file))
index <- index + 1
}
completeCases
}
complete(".", c(2, 4, 8, 10, 12))
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
if(length(directory!=0)) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(fileNames,read.csv)
completeCases <- data.frame(id=numeric(length(id)),nobs=length(id))
index <- 1
for(file in monitors) {
completeCases$id[index] <- file[["ID"]][[1]]
completeCases$nobs[index] <- length(complete.cases(file))
index <- index + 1
}
completeCases
}
complete("specdata", c(2, 4, 8, 10, 12))
complete(".", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
if(length(directory!=0)) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(fileNames,read.csv)
completeCases <- data.frame(id=numeric(length(id)),nobs=length(id))
index <- 1
for(file in monitors) {
completeCases$id[index] <- file[["ID"]][[1]]
comp <- complete.cases(file)
completeCases$nobs[index] <- length(comp[comp==TRUE])
index <- index + 1
}
completeCases
}
complete(".", c(2, 4, 8, 10, 12))
complete(".", 30:25
)
complete(".", 3)
getwd()
setwd("..")
getwd()
submit()
submit()
setwd("..")
submit()
setwd("..")
submit()
pollutantmean <- function(directory, pollutant, id = 1:332) {
if(length(directory!=0)) {
setwd(directory)
}
fileNames <- paste(sprintf("%03d",id),".csv", sep = "")
monitors <- lapply(fileNames,read.csv)
mergedFrame <- Reduce(function(x, y) merge(x, y, all=TRUE), monitors)
pollutantValues <- mergedFrame[pollutant]
nans <- is.na(pollutantValues)
res <- mean(pollutantValues[!nans])
}
getwd()
pollutantmean(".","nitrate",23)
val <- pollutantmean(".","nitrate",23)
val
setwd("..")
getwd()
submit()
getwd()
setwd("..")
getwd()
getwd()
dir()
submit()
submit()
setwd("..")
submit()
s
setwd("..")
submit()
setwd("..")
submit()
submit()
setwd("..")
submit()
setwd("..")
submit()
corr <- function(directory, threshold = 0) {
corrsNum <- numeric(0)
nobsDfr <- complete("specdata")
nobsDfr <- nobsDfr[nobsDfr$nobs > threshold, ]
for (cid in nobsDfr$id) {
monDfr <- getmonitor(cid, directory)
corrsNum <- c(corrsNum, cor(monDfr$sulfate, monDfr$nitrate, use = "pairwise.complete.obs"))
}
return(corrsNum)
}
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
corrsNum <- numeric(0)
nobsDfr <- complete("specdata")
nobsDfr <- nobsDfr[nobsDfr$nobs > threshold, ]
for (cid in nobsDfr$id) {
monDfr <- getmonitor(cid, directory)
corrsNum <- c(corrsNum, cor(monDfr$sulfate, monDfr$nitrate, use = "pairwise.complete.obs"))
}
return(corrsNum)
}
complete <- function(directory, id = 1:332) {
nobsNum <- numeric(0)
for (cid in id) {
cDfr <- getmonitor(cid, directory)
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
data.frame(id = id, nobs = nobsNum)
}
getmonitor <- function(id, directory, summarize = FALSE) {
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(id)), ".csv",
sep = "")
rawDfr <- read.csv(fileStr)
if (summarize) {
print(summary(rawDfr))
}
return(rawDfr)
}
cr <- corr("specdata", 150)
getwd()
setwd("..")
cr <- corr("specdata", 150)
cr
getwd()
submit()
library(swirl)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
